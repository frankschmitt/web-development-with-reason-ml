// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Caml_format = require("rescript/lib/js/caml_format.js");
var Caml_option = require("rescript/lib/js/caml_option.js");
var Caml_js_exceptions = require("rescript/lib/js/caml_js_exceptions.js");

function payment(principal, apr, years) {
  var r = apr / 12.0 / 100.0;
  var n = Math.imul(years, 12);
  var powerTerm = Math.pow(1.0 + r, n);
  return principal * (r * powerTerm) / (powerTerm - 1.0);
}

function toInt(s) {
  var result;
  try {
    result = Caml_format.caml_int_of_string(s);
  }
  catch (raw_exn){
    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
    if (exn.RE_EXN_ID === "Failure") {
      return ;
    }
    throw exn;
  }
  return result;
}

function toFloat(s) {
  var result;
  try {
    result = Caml_format.caml_float_of_string(s);
  }
  catch (raw_exn){
    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
    if (exn.RE_EXN_ID === "Failure") {
      return ;
    }
    throw exn;
  }
  return result;
}

function getValue(element) {
  return Belt_Option.map(Belt_Option.map(element, (function (prim) {
                    return prim;
                  })), (function (prim) {
                return prim.value;
              }));
}

function getIntValue(elementId) {
  return Belt_Option.flatMap(getValue(Caml_option.nullable_to_opt(document.getElementById(elementId))), toInt);
}

function getFloatValue(elementId) {
  return Belt_Option.flatMap(getValue(Caml_option.nullable_to_opt(document.getElementById(elementId))), toFloat);
}

function updatePayment(param) {
  var principal = getFloatValue("principal");
  var apr = getFloatValue("apr");
  var years = getIntValue("years");
  var monthlyPayment = principal !== undefined && apr !== undefined && years !== undefined ? payment(principal, apr, years) : undefined;
  var paymentString = monthlyPayment !== undefined ? monthlyPayment.toFixed(2) : "n/a";
  var __x = document.getElementById("payment");
  Belt_Option.map((__x == null) ? undefined : Caml_option.some(__x), (function (__x) {
          __x.innerText = paymentString;
          
        }));
  console.log("calculate!");
  
}

var principal = document.getElementById("principal");

if (!(principal == null)) {
  principal.addEventListener("input", updatePayment);
}

var apr = document.getElementById("apr");

if (!(apr == null)) {
  apr.addEventListener("input", updatePayment);
}

var years = document.getElementById("years");

if (!(years == null)) {
  years.addEventListener("input", updatePayment);
}

var calculate = document.getElementById("calculate");

if (!(calculate == null)) {
  calculate.addEventListener("click", updatePayment);
}

var D;

var Doc;

var Elem;

var principal$1 = (principal == null) ? undefined : Caml_option.some(principal);

var apr$1 = (apr == null) ? undefined : Caml_option.some(apr);

var years$1 = (years == null) ? undefined : Caml_option.some(years);

var calculate$1 = (calculate == null) ? undefined : Caml_option.some(calculate);

exports.D = D;
exports.Doc = Doc;
exports.Elem = Elem;
exports.payment = payment;
exports.toInt = toInt;
exports.toFloat = toFloat;
exports.getValue = getValue;
exports.getIntValue = getIntValue;
exports.getFloatValue = getFloatValue;
exports.updatePayment = updatePayment;
exports.principal = principal$1;
exports.apr = apr$1;
exports.years = years$1;
exports.calculate = calculate$1;
/* principal Not a pure module */

// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Js_option = require("rescript/lib/js/js_option.js");
var Belt_Float = require("rescript/lib/js/belt_Float.js");
var Caml_array = require("rescript/lib/js/caml_array.js");
var Caml_option = require("rescript/lib/js/caml_option.js");
var Js_null_undefined = require("rescript/lib/js/js_null_undefined.js");

function price(size) {
  if (typeof size !== "number") {
    return 16.00 + (size._0 - 1 | 0) * 0.50;
  }
  switch (size) {
    case /* Small */0 :
        return 11.00;
    case /* Medium */1 :
        return 12.00;
    case /* Large */2 :
        return 13.00;
    
  }
}

function stringOfColourSpec(cspec) {
  if (typeof cspec === "number") {
    if (cspec === /* White */0) {
      return "rgb(255, 255, 255)";
    } else {
      return "rgb(0, 0, 0)";
    }
  }
  if (cspec.TAG !== /* Grey */0) {
    return "rgb(" + String(cspec._0) + "," + String(cspec._1) + "," + String(cspec._2) + ")";
  }
  var s = String(255.0 * cspec._0 | 0);
  return "rgb(" + s + "," + s + "," + s + ")";
}

function colourSpecOfString(s) {
  switch (s) {
    case "Black" :
        return /* Black */1;
    case "White" :
        return /* White */0;
    default:
      var r = /Grey\(([.0-9]+)\)/g;
      var m = r.exec(s);
      if (m === null) {
        return /* Black */1;
      }
      var m0 = Caml_array.get(m, 0);
      return Js_option.getWithDefault(/* Black */1, Caml_option.nullable_to_opt(Js_null_undefined.bind(m0, (function (match0) {
                            return {
                                    TAG: /* Grey */0,
                                    _0: Js_option.getWithDefault(0.0, Belt_Float.fromString(match0))
                                  };
                          }))));
  }
}

console.log("----------------------- colourSpec -> string --------------------------");

console.log("White = rgb(255, 255, 255)");

console.log("Black = rgb(0, 0, 0)");

console.log("Grey(0.7) = " + stringOfColourSpec({
          TAG: /* Grey */0,
          _0: 0.7
        }));

console.log("RGB(100,150,200) = " + stringOfColourSpec({
          TAG: /* RGB */1,
          _0: 100,
          _1: 150,
          _2: 200
        }));

console.log("----------------------- string -> colourSpec --------------------------");

console.log("White = " + stringOfColourSpec(colourSpecOfString("White")));

console.log("Black = " + stringOfColourSpec(colourSpecOfString("Black")));

console.log("Grey(0.3) = " + stringOfColourSpec(colourSpecOfString("Grey(0.3)")));

console.log("RGB(10,20,30) = " + stringOfColourSpec(colourSpecOfString("RGB(10,20,30")));

exports.price = price;
exports.stringOfColourSpec = stringOfColourSpec;
exports.colourSpecOfString = colourSpecOfString;
/*  Not a pure module */
